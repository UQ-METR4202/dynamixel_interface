/* CSIRO Open Source Software License Agreement (variation of the BSD / MIT License)
 * Copyright (c) 2017, Commonwealth Scientific and Industrial Research Organisation (CSIRO) ABN 41 687 119 230.
 * All rights reserved. CSIRO is willing to grant you a license to the dynamixel_actuator ROS packages on the following
 * terms, except where otherwise indicated for third party material. Redistribution and use of this software in source
 * and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * - Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 *   disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials provided with the distribution.
 * - Neither the name of CSIRO nor the names of its contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission of CSIRO.
 *
 * EXCEPT AS EXPRESSLY STATED IN THIS AGREEMENT AND TO THE FULL EXTENT PERMITTED BY APPLICABLE LAW, THE SOFTWARE IS
 * PROVIDED "AS-IS". CSIRO MAKES NO REPRESENTATIONS, WARRANTIES OR CONDITIONS OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
 * BUT NOT LIMITED TO ANY REPRESENTATIONS, WARRANTIES OR CONDITIONS REGARDING THE CONTENTS OR ACCURACY OF THE SOFTWARE,
 * OR OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, THE ABSENCE OF LATENT OR OTHER
 * DEFECTS, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE.
 * TO THE FULL EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL CSIRO BE LIABLE ON ANY LEGAL THEORY (INCLUDING,
 * WITHOUT LIMITATION, IN AN ACTION FOR BREACH OF CONTRACT, NEGLIGENCE OR OTHERWISE) FOR ANY CLAIM, LOSS, DAMAGES OR
 * OTHER LIABILITY HOWSOEVER INCURRED.  WITHOUT LIMITING THE SCOPE OF THE PREVIOUS SENTENCE THE EXCLUSION OF LIABILITY
 * SHALL INCLUDE: LOSS OF PRODUCTION OR OPERATION TIME, LOSS, DAMAGE OR CORRUPTION OF DATA OR RECORDS; OR LOSS OF
 * ANTICIPATED SAVINGS, OPPORTUNITY, REVENUE, PROFIT OR GOODWILL, OR OTHER ECONOMIC LOSS; OR ANY SPECIAL, INCIDENTAL,
 * INDIRECT, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES, ARISING OUT OF OR IN CONNECTION WITH THIS AGREEMENT, ACCESS
 * OF THE SOFTWARE OR ANY OTHER DEALINGS WITH THE SOFTWARE, EVEN IF CSIRO HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
 * CLAIM, LOSS, DAMAGES OR OTHER LIABILITY. APPLICABLE LEGISLATION SUCH AS THE AUSTRALIAN CONSUMER LAW MAY APPLY
 * REPRESENTATIONS, WARRANTIES, OR CONDITIONS, OR IMPOSES OBLIGATIONS OR LIABILITY ON CSIRO THAT CANNOT BE EXCLUDED,
 * RESTRICTED OR MODIFIED TO THE FULL EXTENT SET OUT IN THE EXPRESS TERMS OF THIS CLAUSE ABOVE "CONSUMER GUARANTEES".
 * TO THE EXTENT THAT SUCH CONSUMER GUARANTEES CONTINUE TO APPLY, THEN TO THE FULL EXTENT PERMITTED BY THE APPLICABLE
 * LEGISLATION, THE LIABILITY OF CSIRO UNDER THE RELEVANT CONSUMER GUARANTEE IS LIMITED (WHERE PERMITTED AT CSIRO'S
 * OPTION) TO ONE OF FOLLOWING REMEDIES OR SUBSTANTIALLY EQUIVALENT REMEDIES:
 * (a)  THE REPLACEMENT OF THE SOFTWARE, THE SUPPLY OF EQUIVALENT SOFTWARE, OR SUPPLYING RELEVANT SERVICES AGAIN;
 * (b)  THE REPAIR OF THE SOFTWARE;
 * (c)  THE PAYMENT OF THE COST OF REPLACING THE SOFTWARE, OF ACQUIRING EQUIVALENT SOFTWARE, HAVING THE RELEVANT
 *      SERVICES SUPPLIED AGAIN, OR HAVING THE SOFTWARE REPAIRED.
 * IN THIS CLAUSE, CSIRO INCLUDES ANY THIRD PARTY AUTHOR OR OWNER OF ANY PART OF THE SOFTWARE OR MATERIAL DISTRIBUTED
 * WITH IT.  CSIRO MAY ENFORCE ANY RIGHTS ON BEHALF OF THE RELEVANT THIRD PARTY.
 *
 * Third Party Components:
 *
 * The following third party components are distributed with the Software.  You agree to comply with the license terms
 * for these components as part of accessing the Software.  Other third party software may also be identified in
 * separate files distributed with the Software.
 * ___________________________________________________________________
 *
 * dynamixel_interface_driver and dynamixel_interface_controller packages are forked from projects authored by Brian
 * Axelrod (on behalf of Willow Garage):
 *
 * https://github.com/baxelrod/dynamixel_pro_controller
 * https://github.com/baxelrod/dynamixel_pro_driver
 *
 * Thus they retain the following notice:
 *
 * Software License Agreement (BSD License)
 * Copyright (c) 2013, Willow Garage
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
 * following conditions are met:
 *  - Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 *    disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *    following disclaimer in the documentation and/or other materials provided with the distribution.
 *  - Neither the name of Willow Garage nor the names of its contributors may be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * ___________________________________________________________________
 */


/**
 * @file   dynamixel_const.h
 * @author Tom Molnar (Tom.Molnar@data61.csiro.au), Brian Axelrod
 * @date   December, 2016
 * @brief  Defines the register address tables for each series of dynamixel,
 * as well as the control and status codes for communication.
 */


#ifndef DYNAMIXEL_CONST_H__
#define DYNAMIXEL_CONST_H__

#include <stdint.h>
#include <string>


namespace dynamixel_interface_driver
{

/// Dynamixel types
typedef enum
{
  DXL_AX = 0,
  DXL_RX = 1,
  DXL_LEGACY_MX = 2,
  DXL_MX = 3,
  DXL_X = 4,
  DXL_LEGACY_PRO = 5,
  DXL_P = 6,
  DXL_UNKNOWN = 7
} DynamixelSeriesType;

/// Legacy control table, for older dynamixels:
/// - MX (1.0)
/// - AX
/// - RX
typedef enum
{
  // EEPROM
  DXL_LEGACY_MODEL_NUMBER = 0,
  DXL_LEGACY_FIRMWARE_VERSION = 2,
  DXL_LEGACY_ID = 3,
  DXL_LEGACY_BAUD_RATE = 4,
  DXL_LEGACY_RETURN_DELAY_TIME = 5,
  DXL_LEGACY_CW_ANGLE_LIMIT = 6,
  DXL_LEGACY_CCW_ANGLE_LIMIT = 8,
  DXL_LEGACY_DRIVE_MODE = 10,
  DXL_LEGACY_TEMPERATURE_LIMIT = 11,
  DXL_LEGACY_MIN_VOLTAGE_LIMIT = 12,
  DXL_LEGACY_MAX_VOLTAGE_LIMIT = 13,
  DXL_LEGACY_MAX_TORQUE = 14,
  DXL_LEGACY_RETURN_LEVEL = 16,
  DXL_LEGACY_ALARM_LED = 17,
  DXL_LEGACY_ALARM_SHUTDOWN = 18,
  DXL_LEGACY_MULTI_TURN_OFFSET = 20,
  DXL_LEGACY_RESOLUTION_DIVIDER = 22,

  // RAM
  DXL_LEGACY_TORQUE_ENABLE = 24,
  DXL_LEGACY_LED = 25,

  // - MX (1.0) specific
  DXL_LEGACY_D_GAIN = 26,
  DXL_LEGACY_I_GAIN = 27,
  DXL_LEGACY_P_GAIN = 28,

  // - AX/RX specific
  DXL_LEGACY_CW_COMPLIANCE_MARGIN = 26,
  DXL_LEGACY_CCW_COMPLIANCE_MARGIN = 27,
  DXL_LEGACY_CW_COMPLIANCE_SLOPE = 28,
  DXL_LEGACY_CCW_COMPLIANCE_SLOPE = 29,

  DXL_LEGACY_GOAL_POSITION = 30,
  DXL_LEGACY_MOVING_SPEED = 32,
  DXL_LEGACY_TORQUE_LIMIT = 34,
  DXL_LEGACY_PRESENT_POSITION = 36,
  DXL_LEGACY_PRESENT_SPEED = 38,
  DXL_LEGACY_PRESENT_LOAD = 40,
  DXL_LEGACY_PRESENT_VOLTAGE = 42,
  DXL_LEGACY_PRESENT_TEMPERATURE = 43,
  DXL_LEGACY_REGISTERED_INSTRUCTION = 44,
  DXL_LEGACY_MOVING = 46,
  DXL_LEGACY_LOCK = 47,
  DXL_LEGACY_PUNCH = 48,
  DXL_LEGACY_REALTIME_TICK = 50,
  DXL_LEGACY_PRESENT_CURRENT = 68,
  DXL_LEGACY_TORQUE_CONTROL_ENABLE = 70,
  DXL_LEGACY_GOAL_TORQUE = 71,
  DXL_LEGACY_GOAL_ACCELERATION = 73,
} DynamixelLegacyRegisterTable;


/// Standard control table, for newer models of dynamixels supporting protocol 2.0:
/// - MX (2.0)
/// - X (2.0) (excepting the XL-320, which has a unique table)
typedef enum
{
  // EEPROM
  DXL_STANDARD_MODEL_NUMBER = 0,
  DXL_STANDARD_MODEL_INFO = 2,
  DXL_STANDARD_FIRMWARE_VERSION = 6,
  DXL_STANDARD_ID = 7,
  DXL_STANDARD_BAUD_RATE = 8,
  DXL_STANDARD_RETURN_DELAY_TIME = 9,
  DXL_STANDARD_DRIVE_MODE = 10,
  DXL_STANDARD_OPERATING_MODE = 11,
  DXL_STANDARD_SHADOW_ID = 12,
  DXL_STANDARD_PROTOCOL_VERSION = 13,
  DXL_STANDARD_HOMING_OFFSET = 20,
  DXL_STANDARD_MOVING_THRESHOLD = 24,
  DXL_STANDARD_TEMPERATURE_LIMIT = 31,
  DXL_STANDARD_MAX_VOLTAGE_LIMIT = 32,
  DXL_STANDARD_MIN_VOLTAGE_LIMIT = 34,
  DXL_STANDARD_PWM_LIMIT = 36,
  DXL_STANDARD_CURRENT_LIMIT = 38,
  DXL_STANDARD_ACCELERATION_LIMIT = 40,
  DXL_STANDARD_VELOCITY_LIMIT = 44,
  DXL_STANDARD_MAX_POSITION_LIMIT = 48,
  DXL_STANDARD_MIN_POSITION_LIMIT = 52,
  DXL_STANDARD_DATAPORT_1_MODE = 56,
  DXL_STANDARD_DATAPORT_2_MODE = 57,
  DXL_STANDARD_DATAPORT_3_MODE = 58,
  DXL_STANDARD_SHUTDOWN = 63,

  // RAM
  DXL_STANDARD_TORQUE_ENABLE = 64,
  DXL_STANDARD_LED = 65,
  DXL_STANDARD_STATUS_RETURN_LEVEL = 68,
  DXL_STANDARD_REGISTERED_INSTRUCTION = 69,
  DXL_STANDARD_HARDWARE_ERROR_STATUS = 70,
  DXL_STANDARD_VELOCITY_I_GAIN = 76,
  DXL_STANDARD_VELOCITY_P_GAIN = 78,
  DXL_STANDARD_POSITION_D_GAIN = 80,
  DXL_STANDARD_POSITION_I_GAIN = 82,
  DXL_STANDARD_POSITION_P_GAIN = 84,
  DXL_STANDARD_FEEDFORWARD_2ND_GAIN = 88,
  DXL_STANDARD_FEEDFORWARD_1ST_GAIN = 90,
  DXL_STANDARD_BUS_WATCHDOG = 98,
  DXL_STANDARD_GOAL_PWM = 100,
  DXL_STANDARD_GOAL_CURRENT = 102,
  DXL_STANDARD_GOAL_VELOCITY = 104,
  DXL_STANDARD_PROFILE_ACCELERATION = 108,
  DXL_STANDARD_PROFILE_VELOCITY = 112,
  DXL_STANDARD_GOAL_POSITION = 116,
  DXL_STANDARD_REALTIME_TICK = 120,
  DXL_STANDARD_MOVING = 122,
  DXL_STANDARD_MOVING_STATUS = 123,
  DXL_STANDARD_PRESENT_PWM = 124,
  DXL_STANDARD_PRESENT_CURRENT = 126,
  DXL_STANDARD_PRESENT_VELOCITY = 128,
  DXL_STANDARD_PRESENT_POSITION = 132,
  DXL_STANDARD_VELOCITY_TRAJECTORY = 136,
  DXL_STANDARD_POSITION_TRAJECTORY = 140,
  DXL_STANDARD_PRESENT_INPUT_VOLTAGE = 144,
  DXL_STANDARD_PRESENT_TEMPERATURE = 146,
  DXL_STANDARD_DATAPORT_1 = 152,
  DXL_STANDARD_DATAPORT_2 = 154,
  DXL_STANDARD_DATAPORT_3 = 156,
  DXL_STANDARD_INDIRECT_ADDRESS_1 = 168,
  DXL_STANDARD_INDIRECT_DATA_1 = 224,
} DynamixelStandardRegisterTable;

/// Control table for Dynamixel P series (new pro)
/// - Dynamixel-P
/// - Dynamixel PRO+, sometimes listed as PRO(A)
typedef enum
{
  // EEPROM
  DXL_P_MODEL_NUMBER = 0,
  DXL_P_MODEL_INFO= 2,
  DXL_P_FIRMWARE_VERSION = 6,
  DXL_P_ID = 7,
  DXL_P_BAUD_RATE = 8,
  DXL_P_RETURN_DELAY_TIME = 9,
  DXL_P_DRIVE_MODE = 10,
  DXL_P_OPERATING_MODE = 11,
  DXL_P_SHADOW_ID = 12,
  DXL_P_PROTOCOL_TYPE = 13,
  DXL_P_HOMING_OFFSET = 20,
  DXL_P_MOVING_THRESHOLD = 24,
  DXL_P_TEMPERATURE_LIMIT = 31,
  DXL_P_MAX_VOLTAGE_LIMIT = 32,
  DXL_P_MIN_VOLTAGE_LIMIT = 34,
  DXL_P_PWM_LIMIT = 36,
  DXL_P_CURRENT_LIMIT = 38,
  DXL_P_ACCELERATION_LIMIT = 40,
  DXL_P_VELOCITY_LIMIT = 44,
  DXL_P_MAX_POSITION_LIMIT = 48,
  DXL_P_MIN_POSITION_LIMIT = 52,
  DXL_P_DATAPORT_MODE_1 = 56,
  DXL_P_DATAPORT_MODE_2 = 57,
  DXL_P_DATAPORT_MODE_3 = 58,
  DXL_P_DATAPORT_MODE_4 = 59,
  DXL_P_SHUTDOWN = 63,
  DXL_P_INDIRECT_ADDRESS_1 = 168,

  // RAM
  DXL_P_TORQUE_ENABLE = 512,
  DXL_P_LED_RED = 513,
  DXL_P_LED_GREEN = 514,
  DXL_P_LED_BLUE = 515,
  DXL_P_STATUS_RETURN_LEVEL = 516,
  DXL_P_REGISTERED_INSTRUCTION = 517,
  DXL_P_HARDWARE_ERROR_STATUS = 518,
  DXL_P_VELOCITY_I_GAIN = 524,
  DXL_P_VELOCITY_P_GAIN = 526,
  DXL_P_POSITION_D_GAIN = 528,
  DXL_P_POSITION_I_GAIN = 530,
  DXL_P_POSITION_P_GAIN = 532,
  DXL_P_FEEDFORWARD_2ND_GAIN = 536,
  DXL_P_FEEDFORWARD_1ST_GAIN = 538,
  DXL_P_BUS_WATCHDOG = 546,
  DXL_P_GOAL_PWM = 548,
  DXL_P_GOAL_CURRENT = 550,
  DXL_P_GOAL_VELOCITY = 552,
  DXL_P_PROFILE_ACCELERATION = 556,
  DXL_P_PROFILE_VELOCITY = 560,
  DXL_P_GOAL_POSITION = 564,
  DXL_P_REALTIME_TICK = 568,
  DXL_P_MOVING = 570,
  DXL_P_MOVING_STATUS = 571,
  DXL_P_PRESENT_PWM = 572,
  DXL_P_PRESENT_CURRENT = 574,
  DXL_P_PRESENT_VELOCITY = 576,
  DXL_P_PRESENT_POSITION = 580,
  DXL_P_VELOCITY_TRAJECTORY = 584,
  DXL_P_POSITION_TRAJECTORY = 588,
  DXL_P_PRESENT_INPUT_VOLTAGE = 592,
  DXL_P_PRESENT_TEMPERATURE = 594,
  DXL_P_DATAPORT_1 = 600,
  DXL_P_DATAPORT_2 = 602,
  DXL_P_DATAPORT_3 = 604,
  DXL_P_DATAPORT_4 = 606,
  DXL_P_INDIRECT_DATA_1 = 634
} DynamixelProRegisterTable;


/// Control table/register addresses for each series of dynamixel
typedef enum
{
  // EEPROM
  DXL_LEGACY_PRO_MODEL_NUMBER = 0,
  DXL_LEGACY_PRO_MODEL_INFO=2,
  DXL_LEGACY_PRO_FIRMWARE_VERSION = 6,
  DXL_LEGACY_PRO_ID = 7,
  DXL_LEGACY_PRO_BAUD_RATE = 8,
  DXL_LEGACY_PRO_RETURN_DELAY_TIME = 9,
  DXL_LEGACY_PRO_OPERATING_MODE = 11,
  DXL_LEGACY_PRO_LIMIT_TEMPERATURE = 21,
  DXL_LEGACY_PRO_DOWN_LIMIT_VOLTAGE = 24,
  DXL_LEGACY_PRO_UP_LIMIT_VOLTAGE = 22,
  DXL_LEGACY_PRO_LED = 25,
  DXL_LEGACY_PRO_ACCEL_LIMIT = 26,
  DXL_LEGACY_PRO_VELOCITY_LIMIT = 32,
  DXL_LEGACY_PRO_MAX_TORQUE = 30,
  DXL_LEGACY_PRO_MAX_ANGLE_LIMIT = 36,
  DXL_LEGACY_PRO_MIN_ANGLE_LIMIT = 40,
  DXL_LEGACY_PRO_DATAPORT_MODE_1 = 44,
  DXL_LEGACY_PRO_DATAPORT_MODE_2 = 45,
  DXL_LEGACY_PRO_DATAPORT_MODE_3 = 46,
  DXL_LEGACY_PRO_DATAPORT_MODE_4 = 47,

  // RAM
  DXL_LEGACY_PRO_VELOCITY_I_GAIN = 586,
  DXL_LEGACY_PRO_VELOCITY_P_GAIN = 588,
  DXL_LEGACY_PRO_POSITION_P_GAIN = 594,
  DXL_LEGACY_PRO_TORQUE_ENABLE = 562,
  DXL_LEGACY_PRO_GOAL_POSITION = 596,
  DXL_LEGACY_PRO_GOAL_VELOCITY = 600,
  DXL_LEGACY_PRO_GOAL_TORQUE = 604,
  DXL_LEGACY_PRO_PRESENT_POSITION = 611,
  DXL_LEGACY_PRO_PRESENT_VELOCTY = 615,
  DXL_LEGACY_PRO_PRESENT_CURRENT = 621,
  DXL_LEGACY_PRO_PRESENT_VOLTAGE = 623,
  DXL_LEGACY_PRO_PRESENT_TEMPERATURE = 625,

  DXL_LEGACY_PRO_DATAPORT_1 = 626,
  DXL_LEGACY_PRO_DATAPORT_2 = 628,
  DXL_LEGACY_PRO_DATAPORT_3 = 630,
  DXL_LEGACY_PRO_DATAPORT_4 = 632,

  DXL_LEGACY_PRO_REGISTERED_INSTRUCTION = 890,
  DXL_LEGACY_PRO_MOVING = 610,
  DXL_LEGACY_PRO_RETURN_LEVEL = 891,
  DXL_LEGACY_PRO_HARDWARE_ERROR_STATUS = 892,
} DynamixelLegacyProRegisterTable;


/// The different control modes available on the dynamixel servos. The values chosen for each type reflect those used
/// on the motors themselves.
typedef enum
{
  UNKNOWN  = -1,

  DXL_TORQUE_CONTROL = 0,
  DXL_VELOCITY_CONTROL = 1,
  DXL_POSITION_CONTROL = 3,

  DXL_EXTENDED_POSITION_CONTROL = 4,
  DXL_CURRENT_BASED_POSITION_CONTROL = 5,

  DXL_PWM_CONTROL = 16

} DynamixelControlMode;


/// Instruction codes for various commands
typedef enum
{
  DXL_PING = 1,
  DXL_READ_DATA = 2,
  DXL_WRITE_DATA = 3,
  DXL_REG_WRITE = 4,
  DXL_ACTION = 5,
  DXL_RESET = 6,

  DXL_SYNC_WRITE = 0x83,
  DXL_BULK_READ = 0x92,

  DXL_BROADCAST = 254,

} DynamixelInstruction;


/// Error return codes
typedef enum
{
  // Common error codes
  DXL_OVERLOAD_ERROR = 32,
  DXL_ELECTRIC_SHOCK_ERROR = 16,
  DXL_MOTOR_ENCODER_ERROR = 8,
  DXL_OVERHEATING_ERROR = 4,
  DXL_MOTOR_HALL_ERROR = 2,
  DXL_INPUT_VOLTAGE_ERROR = 1,

  // Legacy specific error codes
  DXL_LEGACY_INSTRUCTION_ERROR = 64,
  DXL_LEGACY_CHECKSUM_ERROR = 16,
  DXL_LEGACY_RANGE_ERROR = 8,
  DXL_LEGACY_ANGLE_LIMIT_ERROR = 2,

} DynamixelErrorCode;

}

#endif  // DYNAMIXEL_CONST_H__
